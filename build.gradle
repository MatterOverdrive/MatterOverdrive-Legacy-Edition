import java.util.function.Consumer

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.selesse:gradle-git-changelog:0.2.+'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.10"
    }
}
plugins {
        id "com.github.hierynomus.license" version "0.14.0"
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.selesse.git.changelog'
apply plugin: 'java'

def BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: "0"
def mod_version = "0.6.0.$BUILD_NUMBER"

version = "1.12.2-$mod_version"

group= "matteroverdrive"
archivesBaseName = "MatterOverdrive"

license {
    header rootProject.file('HEADER')
    include "**/*.java"
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Horizon Studio'
    ext.email = 'contact@hrznstudio.com'
    ignoreFailures = true
    mapping {
        java='SLASHSTAR_STYLE'
    }
}

changelog {
    title = "${archivesBaseName} - Changelog"

    outputDirectory = file("$projectDir")

    since = 'beginning'

    commitFormat = '%s (%an)'

    markdown {
        commitFormat = '* %s (%an)'
    }

    includeLines = {
        !it.contains("Merge")
    }

    processLines = {
        String input = it as String
        if (input.contains('[ci skip] ')) {
            input = input.minus('[ci skip] ')
        }
        input
    }
}

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.1.2607"
    runDir = "run"
    mappings = "snapshot_20171003"

    replaceIn "Reference.java"
    replace "@VERSION@", mod_version
}

repositories {
    mavenCentral()
    maven {
        name "tterrag"
        url "http://maven.tterrag.com"
    }
    maven {url "http://tehnut.info/maven"}
    maven {url "http://modmaven.k-4u.nl"}
    maven {
        name "progwml6"
        url "http://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    provided "team.chisel.ctm:CTM:MC1.12-0.2.3.12"
    deobfProvided "mezz.jei:jei_1.12.2:4.8.5.138:api"
    runtime "mezz.jei:jei_1.12.2:4.8.5.138"
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.20'

    deobfCompile group: 'mcp.mobius.waila', name: 'Hwyla', version: '1.8.23-B38_1.12'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


jar {
    classifier = "universal"
    manifest {
        attributes 'FMLAT': 'mo_at.cfg'
    }
}

task deobfJar(type: Jar) {
    from(sourceSets.main.java.srcDirs) {
        include '*'
    }
    from(sourceSets.main.resources.srcDirs) {
        include '*'
    }
    from(sourceSets.main.output) {
        exclude '*'
    }
    classifier = "deobf"
}

task apiJar(type: Jar) {
    from(sourceSets.main.output) {
        include 'matteroverdrive/api/**'
    }
    classifier = "api"
}

artifacts {
    archives deobfJar
    archives apiJar
}

task("uploadCurse") {
    description = "upload build to curse"

}

task("uploadJars") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                    pom {
                        groupId = project.group
                        version = project.version
                        artifactId = project.archivesBaseName
                        project {
                            name project.archivesBaseName
                            packaging 'jar'
                            description project.archivesBaseName
                            issueManagement {
                                system 'github'
                                url 'https://github.com/MatterOverdrive/MatterOverdrive/issues'
                            }
                            developers {
                                developer {
                                    id 'TheCodedOne'
                                    name 'TheCodedOne'
                                    roles { role 'developer' }
                                }
                                developer {
                                    id 'Buuz135'
                                    name 'Buuz135'
                                    roles { role 'developer' }
                                }
                                developer {
                                    id 'Dev-Osmium'
                                    name 'Dev-Osmium'
                                    roles { role 'developer' }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}